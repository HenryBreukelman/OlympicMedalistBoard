@model OlympicMedalistBoard.Models.Medal

@{
    ViewData["Title"] = "New Medals";
}

<div class="d-flex d-flex justify-content-center align-items-center pb-4">
    <h3 class="my-4 text-info">@ViewData["Title"]</h3>
</div>

<div class="d-flex justify-content-center w-100">
    @using (Html.BeginForm("Create", "Medal", FormMethod.Post , new { @class = "w-50" }))
    {
        <div>
            @Html.LabelFor(m => m.AthleteID)
            @Html.DropDownListFor(m => m.AthleteID, new SelectList(ViewBag.Athletes, "AthleteID", "Name"), "Select an Athlete", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AthleteID, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(m => m.SportID)
            @Html.DropDownListFor(m => m.SportID, new SelectList(ViewBag.Sports, "SportID", "SportName"), "Select a Sport", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.SportID, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(m => m.MedalType)
            @Html.DropDownListFor(m => m.MedalType, new SelectList(new[] { "Gold", "Silver", "Bronze" }), "Select a Medal", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MedalType, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(m => m.DateAwarded)
            @Html.TextBoxFor(m => m.DateAwarded, new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.DateAwarded, "", new { @class = "text-danger" })
        </div>

        <div class="d-flex mt-5 justify-content-center">
            <button type="submit" class="btn btn-outline-success sbtn">Create</button>
            <a class="btn btn-outline-secondary sbtn mx-2" href="@Url.Action("Index")">Cancel</a>
        </div>
    }
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


